<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/grades_manager/models/grades_course.py">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/grades_manager/models/grades_course.py" />
              <option name="originalContent" value="from odoo import models, fields, api&#10;from odoo.exceptions import ValidationError&#10;&#10;# Declaraci贸n de un modelo&#10;# Hereda todas las funcionalidades de models&#10;class GradesCourse(models.Model):&#10;    _name = 'grades.course' # nombre del modelo&#10;&#10;    def _default_teacher_id(self):&#10;        teacher = self.env['res.partner'].search([('is_teacher', '=', True), ('email', '=', 'mainT@gmail.com')], limit=1)&#10;        return teacher&#10;&#10;&#10;    name = fields.Char(string = 'Course Name')&#10;    student_qty = fields.Integer(string = 'Student Quantity', compute='_compute_student_qty', store=True)&#10;    grase_avarage = fields.Float(string = 'Grade Avarage')&#10;    description = fields.Text(string = 'Description')&#10;    is_active = fields.Boolean(string = 'Is active')&#10;    course_start = fields.Datetime(string = 'Course Start Date', default=fields.Datetime.now)&#10;    course_end = fields.Datetime(string = 'Course End Date')&#10;    last_evaluation_date = fields.Date(string = 'Last Evaluation Date', compute='_compute_last_evaluation_date', store=True)&#10;    course_image = fields.Binary(string = 'Course Image')&#10;    course_shift = fields.Selection([('day', 'Day'), ('night', 'Night')], string = 'Course Shift')&#10;    teacher_id = fields.Many2one('res.partner', string = 'Teacher', default=_default_teacher_id)&#10;    teacher_email = fields.Char(related='teacher_id.email', string='Teacher Email', readonly=True)&#10;    grades_evaluation_ids = fields.One2many('grades.evaluation', 'course_id', string = 'Evaluations')&#10;    student_ids = fields.Many2many('res.partner', 'courses_students_rel' ,string = 'Students')&#10;    state = fields.Selection([['register', 'Register'],&#10;                              ['in_progress', 'In Progress'],&#10;                              ['finished', 'Finished']],&#10;                             string = 'State',&#10;                             default = 'register',&#10;                             required = True,&#10;                             help = 'State of the course')&#10;    invalid_dates = fields.Boolean(string = 'Invalid Dates')&#10;&#10;&#10;    def write(self, vals):&#10;        if vals and &quot;grades_evaluation_ids&quot; in vals and not self.student_ids:&#10;            raise ValidationError(&quot;You cannot write to a course without students.&quot;)&#10;&#10;        result = super(GradesCourse, self).write(vals)  # Llama al metodo write del padre (models.Model)&#10;        return result&#10;&#10;    @api.onchange('course_start', 'course_end')&#10;    def onchange_dates(self):&#10;        if self.course_start and self.course_end:&#10;            self.invalid_dates = self.course_start &gt; self.course_end&#10;        else:&#10;            self.invalid_dates = False&#10;&#10;    @api.depends('grades_evaluation_ids.date')&#10;    def _compute_last_evaluation_date(self):&#10;        for course in self:&#10;            evaluation = course.grades_evaluation_ids[-1]&#10;            course.last_evaluation_date = evaluation.date&#10;&#10;&#10;    @api.depends('student_ids')&#10;    def _compute_student_qty(self):&#10;        for course in self:&#10;            course.student_qty = len(course.student_ids)" />
              <option name="updatedContent" value="from odoo import models, fields, api&#10;from odoo.exceptions import ValidationError&#10;&#10;# Declaraci贸n de un modelo&#10;# Hereda todas las funcionalidades de models&#10;class GradesCourse(models.Model):&#10;    _name = 'grades.course' # nombre del modelo&#10;&#10;    def _default_teacher_id(self):&#10;        teacher = self.env['res.partner'].search([('is_teacher', '=', True), ('email', '=', 'mainT@gmail.com')], limit=1)&#10;        return teacher&#10;&#10;&#10;    name = fields.Char(string = 'Course Name')&#10;    student_qty = fields.Integer(string = 'Student Quantity', compute='_compute_student_qty', store=True)&#10;    grase_avarage = fields.Float(string = 'Grade Avarage')&#10;    description = fields.Text(string = 'Description')&#10;    is_active = fields.Boolean(string = 'Is active')&#10;    course_start = fields.Datetime(string = 'Course Start Date', default=fields.Datetime.now)&#10;    course_end = fields.Datetime(string = 'Course End Date')&#10;    last_evaluation_date = fields.Date(string = 'Last Evaluation Date', compute='_compute_last_evaluation_date', store=True)&#10;    course_image = fields.Binary(string = 'Course Image')&#10;    course_shift = fields.Selection([('day', 'Day'), ('night', 'Night')], string = 'Course Shift')&#10;    teacher_id = fields.Many2one('res.partner', string = 'Teacher', default=_default_teacher_id)&#10;    teacher_email = fields.Char(related='teacher_id.email', string='Teacher Email', readonly=True)&#10;    grades_evaluation_ids = fields.One2many('grades.evaluation', 'course_id', string = 'Evaluations')&#10;    student_ids = fields.Many2many('res.partner', 'courses_students_rel' ,string = 'Students')&#10;    state = fields.Selection([['register', 'Register'],&#10;                              ['in_progress', 'In Progress'],&#10;                              ['finished', 'Finished']],&#10;                             string = 'State',&#10;                             default = 'register',&#10;                             required = True,&#10;                             help = 'State of the course')&#10;    invalid_dates = fields.Boolean(string = 'Invalid Dates')&#10;&#10;&#10;    def write(self, vals):&#10;        if vals and &quot;grades_evaluation_ids&quot; in vals and not self.student_ids:&#10;            raise ValidationError(&quot;You cannot write to a course without students.&quot;)&#10;&#10;        result = super(GradesCourse, self).write(vals)  # Llama al metodo write del padre (models.Model)&#10;        return result&#10;&#10;    @api.onchange('course_start', 'course_end')&#10;    def onchange_dates(self):&#10;        if self.course_start and self.course_end:&#10;            self.invalid_dates = self.course_start &gt; self.course_end&#10;        else:&#10;            self.invalid_dates = False&#10;&#10;    @api.depends('grades_evaluation_ids.date')&#10;    def _compute_last_evaluation_date(self):&#10;        for course in self:&#10;            if course.grades_evaluation_ids:&#10;                evaluation = course.grades_evaluation_ids[-1]&#10;                course.last_evaluation_date = evaluation.date&#10;            else:&#10;                course.last_evaluation_date = False&#10;&#10;&#10;    @api.depends('student_ids')&#10;    def _compute_student_qty(self):&#10;        for course in self:&#10;            course.student_qty = len(course.student_ids)" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/grades_manager/models/grades_evaluation.py">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/grades_manager/models/grades_evaluation.py" />
              <option name="originalContent" value="from odoo import models, fields&#10;&#10;# Declaraci贸n de un modelo&#10;# Hereda todas las funcionalidades de models&#10;class GradesEvaluation(models.Model):&#10;    _name = 'grades.evaluation' # nombre del modelo&#10;&#10;    name = fields.Char(string = 'Course Name')&#10;    date = fields.Date(string = 'Date')&#10;    description = fields.Text(string = 'Description')&#10;    course_id = fields.Many2one('grades.course', string = 'Curso', ondelete='cascade')&#10;    grade_ids = fields.One2many('grades.grade', 'evaluation_id', string='Grades')" />
              <option name="updatedContent" value="from odoo import models, fields&#10;&#10;# Declaraci贸n de un modelo&#10;# Hereda todas las funcionalidades de models&#10;class GradesEvaluation(models.Model):&#10;    _name = 'grades.evaluation' # nombre del modelo&#10;&#10;    name = fields.Char(string = 'Course Name')&#10;    date = fields.Date(string = 'Date')&#10;    description = fields.Text(string = 'Description')&#10;    course_id = fields.Many2one('grades.course', string = 'Curso', ondelete='cascade')&#10;    grade_ids = fields.One2many('grades.grade', 'evaluation_id', string='Grades')" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/grades_manager/models/grades_grade.py">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/grades_manager/models/grades_grade.py" />
              <option name="originalContent" value="from odoo import models, fields&#10;&#10;class GradesGrade(models.Model):&#10;    _name = 'grades.grade'&#10;    _description = 'Grade'&#10;&#10;    student_id = fields.Many2one('res.partner', string='Student', required=True, domain=[('is_student', '=', True)])&#10;    value = fields.Float(string='Value', required=True)&#10;    date = fields.Date(string='Date', required=True)&#10;    evaluation_id = fields.Many2one('grades.evaluation', string='Evaluation', required=True, readonly=True)&#10;&#10;" />
              <option name="updatedContent" value="from odoo import models, fields&#10;&#10;class GradesGrade(models.Model):&#10;    _name = 'grades.grade'&#10;    _description = 'Grade'&#10;&#10;    student_id = fields.Many2one('res.partner', string='Student', required=True, domain=[('is_student', '=', True)])&#10;    value = fields.Float(string='Value', required=True)&#10;    date = fields.Date(string='Date', required=True, default=fields.Date.context_today)&#10;    evaluation_id = fields.Many2one('grades.evaluation', string='Evaluation', required=True, readonly=True)" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/grades_manager/views/grades_evaluation_views.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/grades_manager/views/grades_evaluation_views.xml" />
              <option name="originalContent" value="&lt;odoo&gt;&#10;    &lt;record id=&quot;grades_evaluations_action&quot; model=&quot;ir.actions.act_window&quot;&gt;&#10;        &lt;field name=&quot;name&quot;&gt;Evaluations&lt;/field&gt;&#10;        &lt;field name=&quot;res_model&quot;&gt;grades.evaluation&lt;/field&gt;&#10;        &lt;field name=&quot;view_mode&quot;&gt;list,form&lt;/field&gt;&#10;    &lt;/record&gt;&#10;&#10;    &lt;record id=&quot;grades_evaluations_list_view&quot; model=&quot;ir.ui.view&quot;&gt;&#10;        &lt;field name=&quot;name&quot;&gt;grades.evaluation.list&lt;/field&gt;&#10;        &lt;field name=&quot;model&quot;&gt;grades.evaluation&lt;/field&gt;&#10;        &lt;field name=&quot;arch&quot; type=&quot;xml&quot;&gt;&#10;            &lt;list string=&quot;Courses&quot;&gt;&#10;                &lt;field name=&quot;name&quot;/&gt;&#10;                &lt;field name=&quot;date&quot;/&gt;&#10;                &lt;field name=&quot;description&quot;/&gt;&#10;                &lt;field name=&quot;course_id&quot;/&gt;&#10;            &lt;/list&gt;&#10;        &lt;/field&gt;&#10;&#10;    &lt;/record&gt;&#10;        &lt;record id=&quot;grades_evaluations_form_view&quot; model=&quot;ir.ui.view&quot;&gt;&#10;        &lt;field name=&quot;name&quot;&gt;grades.evaluation.form&lt;/field&gt;&#10;        &lt;field name=&quot;model&quot;&gt;grades.evaluation&lt;/field&gt;&#10;        &lt;field name=&quot;arch&quot; type=&quot;xml&quot;&gt;&#10;            &lt;form string=&quot;Courses&quot;&gt;&#10;                &lt;sheet&gt;&#10;                    &lt;group&gt;&#10;                        &lt;field name=&quot;name&quot;/&gt;&#10;                        &lt;field name=&quot;date&quot;/&gt;&#10;                        &lt;field name=&quot;description&quot;/&gt;&#10;                        &lt;field name=&quot;course_id&quot;/&gt;&#10;                    &lt;/group&gt;&#10;                    &lt;group&gt;&#10;                        &lt;field name=&quot;grade_ids&quot; mode=&quot;list&quot; editable=&quot;bottom&quot;&gt;&#10;                            &lt;list string=&quot;Grades&quot;&gt;&#10;                                &lt;field name=&quot;student_id&quot;/&gt;&#10;                                &lt;field name=&quot;value&quot;/&gt;&#10;                                &lt;field name=&quot;date&quot;/&gt;&#10;                            &lt;/list&gt;&#10;                        &lt;/field&gt;&#10;                    &lt;/group&gt;&#10;                &lt;/sheet&gt;&#10;            &lt;/form&gt;&#10;        &lt;/field&gt;&#10;    &lt;/record&gt;&#10;&lt;/odoo&gt;" />
              <option name="updatedContent" value="&lt;odoo&gt;&#10;    &lt;record id=&quot;grades_evaluations_action&quot; model=&quot;ir.actions.act_window&quot;&gt;&#10;        &lt;field name=&quot;name&quot;&gt;Evaluations&lt;/field&gt;&#10;        &lt;field name=&quot;res_model&quot;&gt;grades.evaluation&lt;/field&gt;&#10;        &lt;field name=&quot;view_mode&quot;&gt;list,form&lt;/field&gt;&#10;    &lt;/record&gt;&#10;&#10;    &lt;record id=&quot;grades_evaluations_list_view&quot; model=&quot;ir.ui.view&quot;&gt;&#10;        &lt;field name=&quot;name&quot;&gt;grades.evaluation.list&lt;/field&gt;&#10;        &lt;field name=&quot;model&quot;&gt;grades.evaluation&lt;/field&gt;&#10;        &lt;field name=&quot;arch&quot; type=&quot;xml&quot;&gt;&#10;            &lt;list string=&quot;Courses&quot;&gt;&#10;                &lt;field name=&quot;name&quot;/&gt;&#10;                &lt;field name=&quot;date&quot;/&gt;&#10;                &lt;field name=&quot;description&quot;/&gt;&#10;                &lt;field name=&quot;course_id&quot;/&gt;&#10;            &lt;/list&gt;&#10;        &lt;/field&gt;&#10;&#10;    &lt;/record&gt;&#10;        &lt;record id=&quot;grades_evaluations_form_view&quot; model=&quot;ir.ui.view&quot;&gt;&#10;        &lt;field name=&quot;name&quot;&gt;grades.evaluation.form&lt;/field&gt;&#10;        &lt;field name=&quot;model&quot;&gt;grades.evaluation&lt;/field&gt;&#10;        &lt;field name=&quot;arch&quot; type=&quot;xml&quot;&gt;&#10;            &lt;form string=&quot;Courses&quot;&gt;&#10;                &lt;sheet&gt;&#10;                    &lt;group&gt;&#10;                        &lt;field name=&quot;name&quot;/&gt;&#10;                        &lt;field name=&quot;date&quot;/&gt;&#10;                        &lt;field name=&quot;description&quot;/&gt;&#10;                        &lt;field name=&quot;course_id&quot;/&gt;&#10;                    &lt;/group&gt;&#10;                    &lt;group&gt;&#10;                        &lt;field name=&quot;grade_ids&quot; mode=&quot;tree&quot; view_id=&quot;ref('grades_manager.grades_grade_list_view')&quot; editable=&quot;bottom&quot;/&gt;&#10;                    &lt;/group&gt;&#10;                &lt;/sheet&gt;&#10;            &lt;/form&gt;&#10;        &lt;/field&gt;&#10;    &lt;/record&gt;&#10;&lt;/odoo&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/grades_manager/views/grades_grade_views.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/grades_manager/views/grades_grade_views.xml" />
              <option name="updatedContent" value="&lt;odoo&gt;&#10;    &lt;record id=&quot;grades_grade_list_view&quot; model=&quot;ir.ui.view&quot;&gt;&#10;        &lt;field name=&quot;name&quot;&gt;grades.grade.list&lt;/field&gt;&#10;        &lt;field name=&quot;model&quot;&gt;grades.grade&lt;/field&gt;&#10;        &lt;field name=&quot;arch&quot; type=&quot;xml&quot;&gt;&#10;            &lt;tree string=&quot;Grades&quot;&gt;&#10;                &lt;field name=&quot;student_id&quot;/&gt;&#10;                &lt;field name=&quot;value&quot;/&gt;&#10;                &lt;field name=&quot;date&quot;/&gt;&#10;                &lt;field name=&quot;evaluation_id&quot;/&gt;&#10;            &lt;/tree&gt;&#10;        &lt;/field&gt;&#10;    &lt;/record&gt;&#10;&lt;/odoo&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/grades_manager/views/grades_manager_menus.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/grades_manager/views/grades_manager_menus.xml" />
              <option name="originalContent" value="&lt;odoo&gt;&#10;    &lt;menuitem id=&quot;grades_manager_menu&quot; name=&quot;Grades Manager&quot;/&gt;&#10;    &lt;menuitem id=&quot;grades_course_manager_menu&quot; sequence=&quot;1&quot; parent=&quot;grades_manager_menu&quot; name=&quot;Course&quot;/&gt;&#10;    &lt;menuitem id=&quot;teacher_menu&quot; parent=&quot;grades_manager_menu&quot; name=&quot;Teacher&quot; action=&quot;teacher_action&quot;/&gt;&#10;    &lt;menuitem id=&quot;students_menu&quot; parent=&quot;grades_manager_menu&quot; name=&quot;Students&quot; action=&quot;students_action&quot;/&gt;&#10;    &lt;menuitem id=&quot;grades_course_menu&quot; parent=&quot;grades_course_manager_menu&quot; name=&quot;Courses&quot; action=&quot;grades_courses_action&quot;/&gt;&#10;    &lt;menuitem id=&quot;grades_evaluation_menu&quot; parent=&quot;grades_course_manager_menu&quot; name=&quot;Evaluations&quot; action=&quot;grades_evaluations_action&quot;/&gt;&#10;&lt;/odoo&gt;" />
              <option name="updatedContent" value="&lt;odoo&gt;&#10;    &lt;menuitem id=&quot;grades_manager_menu&quot; name=&quot;Grades Manager&quot;/&gt;&#10;    &lt;menuitem id=&quot;grades_course_manager_menu&quot; sequence=&quot;1&quot; parent=&quot;grades_manager_menu&quot; name=&quot;Course&quot;/&gt;&#10;    &lt;menuitem id=&quot;teacher_menu&quot; parent=&quot;grades_manager_menu&quot; name=&quot;Teacher&quot; action=&quot;teacher_action&quot;/&gt;&#10;    &lt;menuitem id=&quot;students_menu&quot; parent=&quot;grades_manager_menu&quot; name=&quot;Students&quot; action=&quot;grades_manager.students_action&quot;/&gt;&#10;    &lt;menuitem id=&quot;grades_course_menu&quot; parent=&quot;grades_course_manager_menu&quot; name=&quot;Courses&quot; action=&quot;grades_courses_action&quot;/&gt;&#10;    &lt;menuitem id=&quot;grades_evaluation_menu&quot; parent=&quot;grades_course_manager_menu&quot; name=&quot;Evaluations&quot; action=&quot;grades_evaluations_action&quot;/&gt;&#10;&lt;/odoo&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/grades_manager/views/res_partner_views.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/grades_manager/views/res_partner_views.xml" />
              <option name="originalContent" value="&lt;odoo&gt;&#10;    &lt;record id=&quot;view_partner_form&quot; model=&quot;ir.ui.view&quot;&gt;&#10;        &lt;field name=&quot;name&quot;&gt;res.partner.form.ext&lt;/field&gt;&#10;        &lt;field name=&quot;model&quot;&gt;res.partner&lt;/field&gt;&#10;        &lt;field name=&quot;inherit_id&quot; ref=&quot;base.view_partner_form&quot; /&gt;&#10;        &lt;field name=&quot;arch&quot; type=&quot;xml&quot;&gt;&#10;            &lt;field name=&quot;category_id&quot; position=&quot;after&quot;&gt;&#10;                &lt;field name=&quot;is_teacher&quot;/&gt;&#10;            &lt;/field&gt;&#10;            &lt;xpath expr=&quot;//field[@name='vat']/..&quot; position=&quot;inside&quot;&gt;&#10;                &lt;field name=&quot;is_freelance&quot;/&gt;&#10;            &lt;/xpath&gt;&#10;        &lt;/field&gt;&#10;    &lt;/record&gt;&#10;&#10;    &lt;record id=&quot;teacher_list_view&quot; model=&quot;ir.ui.view&quot;&gt;&#10;        &lt;field name=&quot;name&quot;&gt;teacher.list&lt;/field&gt;&#10;        &lt;field name=&quot;model&quot;&gt;res.partner&lt;/field&gt;&#10;        &lt;field name=&quot;arch&quot; type=&quot;xml&quot;&gt;&#10;            &lt;list string=&quot;Teachers&quot;&gt;&#10;                &lt;field name=&quot;display_name&quot;/&gt;&#10;                &lt;field name=&quot;phone&quot;/&gt;&#10;                &lt;field name=&quot;email&quot;/&gt;&#10;            &lt;/list&gt;&#10;        &lt;/field&gt;&#10;    &lt;/record&gt;&#10;&#10;&#9;&lt;record id=&quot;teacher_form_view&quot; model=&quot;ir.ui.view&quot;&gt;&#10;        &lt;field name=&quot;name&quot;&gt;teacher.form&lt;/field&gt;&#10;        &lt;field name=&quot;model&quot;&gt;res.partner&lt;/field&gt;&#10;        &lt;field name=&quot;arch&quot; type=&quot;xml&quot;&gt;&#10;            &lt;form string=&quot;Teacher&quot;&gt;&#10;                &lt;sheet&gt;&#10;                    &lt;group&gt;&#10;                        &lt;field name=&quot;display_name&quot;/&gt;&#10;                        &lt;field name=&quot;phone&quot;/&gt;&#10;                        &lt;field name=&quot;email&quot;/&gt;&#10;                    &lt;/group&gt;&#10;                &lt;/sheet&gt;&#10;            &lt;/form&gt;&#10;        &lt;/field&gt;&#10;    &lt;/record&gt;&#10;&#10;    &lt;record id=&quot;teacher_action&quot; model=&quot;ir.actions.act_window&quot;&gt;&#10;        &lt;field name=&quot;name&quot;&gt;Teacher&lt;/field&gt;&#10;        &lt;field name=&quot;res_model&quot;&gt;res.partner&lt;/field&gt;&#10;        &lt;field name=&quot;view_mode&quot;&gt;list,form&lt;/field&gt;&#10;        &lt;field name=&quot;domain&quot;&gt;[('is_teacher', '=', True)]&lt;/field&gt;&#10;        &lt;field name=&quot;view_ids&quot; eval=&quot;[(5,0,0),&#10;            (0, 0, {'view_mode': 'list', 'view_id': ref('teacher_list_view')}),&#10;            (0, 0, {'view_mode': 'form', 'view_id': ref('teacher_form_view')})&#10;        ]&quot;/&gt;&#10;    &lt;/record&gt;&#10;&#10;&lt;!-- Vistas de estudiantes --&gt;&#10;        &lt;record id=&quot;students_list_view&quot; model=&quot;ir.ui.view&quot;&gt;&#10;        &lt;field name=&quot;name&quot;&gt;students.list&lt;/field&gt;&#10;        &lt;field name=&quot;model&quot;&gt;res.partner&lt;/field&gt;&#10;        &lt;field name=&quot;arch&quot; type=&quot;xml&quot;&gt;&#10;            &lt;list string=&quot;Teachers&quot;&gt;&#10;                &lt;field name=&quot;display_name&quot;/&gt;&#10;                &lt;field name=&quot;phone&quot;/&gt;&#10;                &lt;field name=&quot;email&quot;/&gt;&#10;            &lt;/list&gt;&#10;        &lt;/field&gt;&#10;    &lt;/record&gt;&#10;&#10;&#9;&lt;record id=&quot;teacher_form_view&quot; model=&quot;ir.ui.view&quot;&gt;&#10;        &lt;field name=&quot;name&quot;&gt;teacher.form&lt;/field&gt;&#10;        &lt;field name=&quot;model&quot;&gt;res.partner&lt;/field&gt;&#10;        &lt;field name=&quot;arch&quot; type=&quot;xml&quot;&gt;&#10;            &lt;form string=&quot;Teacher&quot;&gt;&#10;                &lt;sheet&gt;&#10;                    &lt;group&gt;&#10;                        &lt;field name=&quot;display_name&quot;/&gt;&#10;                        &lt;field name=&quot;phone&quot;/&gt;&#10;                        &lt;field name=&quot;email&quot;/&gt;&#10;                    &lt;/group&gt;&#10;                &lt;/sheet&gt;&#10;            &lt;/form&gt;&#10;        &lt;/field&gt;&#10;    &lt;/record&gt;&#10;&#10;&#10;&#10;&lt;/odoo&gt;" />
              <option name="updatedContent" value="&lt;odoo&gt;&#10;    &lt;record id=&quot;view_partner_form&quot; model=&quot;ir.ui.view&quot;&gt;&#10;        &lt;field name=&quot;name&quot;&gt;res.partner.form.ext&lt;/field&gt;&#10;        &lt;field name=&quot;model&quot;&gt;res.partner&lt;/field&gt;&#10;        &lt;field name=&quot;inherit_id&quot; ref=&quot;base.view_partner_form&quot; /&gt;&#10;        &lt;field name=&quot;arch&quot; type=&quot;xml&quot;&gt;&#10;            &lt;field name=&quot;category_id&quot; position=&quot;after&quot;&gt;&#10;                &lt;field name=&quot;is_teacher&quot;/&gt;&#10;            &lt;/field&gt;&#10;            &lt;xpath expr=&quot;//field[@name='vat']/..&quot; position=&quot;inside&quot;&gt;&#10;                &lt;field name=&quot;is_freelance&quot;/&gt;&#10;            &lt;/xpath&gt;&#10;        &lt;/field&gt;&#10;    &lt;/record&gt;&#10;&#10;    &lt;record id=&quot;teacher_list_view&quot; model=&quot;ir.ui.view&quot;&gt;&#10;        &lt;field name=&quot;name&quot;&gt;teacher.list&lt;/field&gt;&#10;        &lt;field name=&quot;model&quot;&gt;res.partner&lt;/field&gt;&#10;        &lt;field name=&quot;arch&quot; type=&quot;xml&quot;&gt;&#10;            &lt;list string=&quot;Teachers&quot;&gt;&#10;                &lt;field name=&quot;display_name&quot;/&gt;&#10;                &lt;field name=&quot;phone&quot;/&gt;&#10;                &lt;field name=&quot;email&quot;/&gt;&#10;            &lt;/list&gt;&#10;        &lt;/field&gt;&#10;    &lt;/record&gt;&#10;&#10;&#9;&lt;record id=&quot;teacher_form_view&quot; model=&quot;ir.ui.view&quot;&gt;&#10;        &lt;field name=&quot;name&quot;&gt;teacher.form&lt;/field&gt;&#10;        &lt;field name=&quot;model&quot;&gt;res.partner&lt;/field&gt;&#10;        &lt;field name=&quot;arch&quot; type=&quot;xml&quot;&gt;&#10;            &lt;form string=&quot;Teacher&quot;&gt;&#10;                &lt;sheet&gt;&#10;                    &lt;group&gt;&#10;                        &lt;field name=&quot;display_name&quot;/&gt;&#10;                        &lt;field name=&quot;phone&quot;/&gt;&#10;                        &lt;field name=&quot;email&quot;/&gt;&#10;                    &lt;/group&gt;&#10;                &lt;/sheet&gt;&#10;            &lt;/form&gt;&#10;        &lt;/field&gt;&#10;    &lt;/record&gt;&#10;&#10;    &lt;record id=&quot;teacher_action&quot; model=&quot;ir.actions.act_window&quot;&gt;&#10;        &lt;field name=&quot;name&quot;&gt;Teacher&lt;/field&gt;&#10;        &lt;field name=&quot;res_model&quot;&gt;res.partner&lt;/field&gt;&#10;        &lt;field name=&quot;view_mode&quot;&gt;list,form&lt;/field&gt;&#10;        &lt;field name=&quot;domain&quot;&gt;[('is_teacher', '=', True)]&lt;/field&gt;&#10;        &lt;field name=&quot;view_ids&quot; eval=&quot;[(5,0,0),&#10;            (0, 0, {'view_mode': 'list', 'view_id': ref('teacher_list_view')}),&#10;            (0, 0, {'view_mode': 'form', 'view_id': ref('teacher_form_view')})&#10;        ]&quot;/&gt;&#10;    &lt;/record&gt;&#10;&#10;    &lt;!-- Vistas de estudiantes --&gt;&#10;    &lt;record id=&quot;student_list_view&quot; model=&quot;ir.ui.view&quot;&gt;&#10;        &lt;field name=&quot;name&quot;&gt;student.list&lt;/field&gt;&#10;        &lt;field name=&quot;model&quot;&gt;res.partner&lt;/field&gt;&#10;        &lt;field name=&quot;arch&quot; type=&quot;xml&quot;&gt;&#10;            &lt;list string=&quot;Students&quot;&gt;&#10;                &lt;field name=&quot;display_name&quot;/&gt;&#10;                &lt;field name=&quot;phone&quot;/&gt;&#10;                &lt;field name=&quot;email&quot;/&gt;&#10;            &lt;/list&gt;&#10;        &lt;/field&gt;&#10;    &lt;/record&gt;&#10;&#10;    &lt;record id=&quot;student_form_view&quot; model=&quot;ir.ui.view&quot;&gt;&#10;        &lt;field name=&quot;name&quot;&gt;student.form&lt;/field&gt;&#10;        &lt;field name=&quot;model&quot;&gt;res.partner&lt;/field&gt;&#10;        &lt;field name=&quot;arch&quot; type=&quot;xml&quot;&gt;&#10;            &lt;form string=&quot;Student&quot;&gt;&#10;                &lt;sheet&gt;&#10;                    &lt;group&gt;&#10;                        &lt;field name=&quot;display_name&quot;/&gt;&#10;                        &lt;field name=&quot;phone&quot;/&gt;&#10;                        &lt;field name=&quot;email&quot;/&gt;&#10;                    &lt;/group&gt;&#10;                &lt;/sheet&gt;&#10;            &lt;/form&gt;&#10;        &lt;/field&gt;&#10;    &lt;/record&gt;&#10;&#10;    &lt;record id=&quot;student_action&quot; model=&quot;ir.actions.act_window&quot;&gt;&#10;        &lt;field name=&quot;name&quot;&gt;Students&lt;/field&gt;&#10;        &lt;field name=&quot;res_model&quot;&gt;res.partner&lt;/field&gt;&#10;        &lt;field name=&quot;view_mode&quot;&gt;list,form&lt;/field&gt;&#10;        &lt;field name=&quot;domain&quot;&gt;[(&quot;is_student&quot;, &quot;=&quot;, True)]&lt;/field&gt;&#10;        &lt;field name=&quot;view_ids&quot; eval=&quot;[(5,0,0),&#10;            (0, 0, {'view_mode': 'list', 'view_id': ref('student_list_view')}),&#10;            (0, 0, {'view_mode': 'form', 'view_id': ref('student_form_view')})&#10;        ]&quot;/&gt;&#10;    &lt;/record&gt;&#10;&#10;&lt;/odoo&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>